@model List<task03_0606.Models.Order>
@{
    ViewBag.Title = "Order_list_bussiness";

}
<style>
    .cardMenuItem {
        border: none;
        font-weight: 700;
    }
</style>

<ol class="breadcrumb">
    @*<li class="breadcrumb-item">
            <a href="~/Home/Index"></a>
        </li>*@
    <li class="breadcrumb-item active">未出餐清單 </li>
    @*<small class="pull-right text-muted">Updated yesterday at 11:59 PM</small>*@
</ol>



<div class="row">
    @foreach (var order in Model) {
        <div class="card cardMenuItem col-sm-12 col-md-4 col-xl-3">
            <div class="card-header ">
                <p class="card-text ">
                    訂單編號：@string.Format("{0:yyyyMMdd}{1}", Convert.ToDateTime(order.orderDate), (order.orderId + 10000))<br />
                    桌號：@order.tableId &nbsp 電話：@order.phoneNum 
                    
                    <small class="text-muted">@string.Format("{0:yyyy/MM/dd/ HH:mm}", Convert.ToDateTime(order.orderDate))</small>
                    <button class="btn btn-sm btn-success pull-right" disabled onclick="orderComplete(@order.orderId)"><b>出餐</b></button>
                </p>

            </div>
            <ul class="list-group list-group-flush" id="storeUl">
                @{

                    using (task03_0606.Models.FoodCourtDBEntities db = new task03_0606.Models.FoodCourtDBEntities()) {

                        string stroeId = Session["storeId"].ToString();

                        var detailList = (from o in db.OrderDetials
                                          where o.orderId == order.orderId && o.Product.Store.storeId == stroeId
                                          select o).ToList();



                        foreach (var detail in detailList) {
                            <li class="list-group-item container-fluid" data-orderid="@order.orderId" data-productid="@detail.productID">
                                <div class="row">
                                    <div class="col-xs-3">
                                        <img style="width:50px; height:40px" src="~/photo/@detail.Product.productPicture">
                                    </div>
                                    <div class="col-xs-8">
                                        <p class="card-text ">&nbsp @detail.Product.productName <br /> &nbsp @detail.productCount 份 &nbsp 備註：@detail.customerNote</p>
                                        <p style="display:none" class="card-text">@((detail.productionStatus) == 1 ? "準備中" : "OK")</p>


                                    </div>
                                    <div class="col-xs-1" data-status="@detail.productionStatus"></div>
                                </div>
                            </li>
                        }
                    }
                }
            </ul>

        </div>
    }


</div>

<div class="row">
    <div id="pageList" class="col-sm-12 col-md-12"></div>
    <div id="page" class="col-sm-12 col-md-12">
        <ul class="pagination pagination-sm">
            <li class="page-item prev"><a class="page-link" href="#">上一頁</a></li>
            <li class="page-item"><a class="page-link" href="#">1</a></li>
            <li class="page-item active"><a class="page-link" href="#">2</a></li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>
            <li class="page-item next"><a class="page-link" href="#">下一頁</a></li>
        </ul>
    </div>
</div>




<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="~/Scripts/jquery.signalR-2.3.0.min.js"></script>
<script src="~/signalr/hubs"></script>

<script>

    //點選明細 標示產品準備狀況
    $(".list-group-item.container-fluid").click(function () {
        //console.log($(this).find("i").length);
        //console.log(this);
        //console.log($(this).data("orderid"));

        //如果產品明細中有找到<i>元素,則移除<i>
        if ($(this).find("i").length > 0) {
            $(this)
                 .find("div.col-xs-1")
                 .find('i').remove();
            //將<p>顏色改成黑色
            $(this).find("p").css("color", "black");
            //修改 div.col-xs-1 中的 data-status值為1
            $(this).find("div.col-xs-1").data("status", "1");
        }
        else {
            //於 div.col-xs-1 中加上<i>元素 顏色綠色
            $(this)
                .find("div.col-xs-1")
                .append('<i class="fa fa-fw fa-check-circle"></i>')
                .css("color", "green");
            //將<p>顏色改成綠色
            $(this).find("p").css("color", "green");
            //修改 div.col-xs-1 中的 data-status值為2
            $(this).find("div.col-xs-1").data("status", "2");
        }
        productId = $(this).data("productid");
        orderId = $(this).data("orderid");
        //console.log("productId：" + productId + "   orderId：" + orderId);

        //修改產品狀態到資料庫
     $.ajax({
             method: "post",
             dataType: "json",
             url: "@Url.Action("Order_list_chickToDatabase_bussiness", "Order")",
             data: {

                 productId_ok: parseInt(productId),
                 orderId_ok: parseInt(orderId),
             }
     })

    })

    //餐點都準備Ok, 訂單按鈕可點選
    $(".card.cardMenuItem").click(function () {
        //console.log($(this).find("li").length);
        //console.log($(this).find(".col-xs-1"));
     
        //全部餐點都ok的數值 (li 數量 * 完成數值 2)
        var orderOk = $(this).find("li").length * 2;
        //設定計算完成項目數值
        var totalCount = 0;
        //alert("orderok：" + orderOk + "  totalCount：" + totalCount);

        //對每個li的產品狀態數值做加總
        $(this).find(".col-xs-1").each(function () {
            //console.log($(this).data("status"));
            totalCount += parseInt($(this).data("status"));
        });
        //console.log(totalCount);
        // alert("orderok：" + orderOk + "  totalCount：" + totalCount);

        //如果數值相符，出餐按鈕可點選
        if (totalCount == orderOk) {
            $(this).find(".btn.btn-sm").removeAttr('disabled');
        }
        if (totalCount < orderOk) {
            $(this).find(".btn.btn-sm").attr('disabled', true);
        }
    })

    //訂單出餐
    function orderComplete(orderId) {
        $.ajax({
            method: "post",
            dataType: "json",
            url: "@Url.Action("Order_list_bussiness", "Order")",
            data: {
                orderId_ok: parseInt(orderId),
            }
        })
    .done(function (data) {
        alert("確定出餐")
        window.location.reload();
    })

    }


    //分頁
    $(function () {
        //if ($ === jQuery) alert("true");
        //實現分頁思路:
        var pageSize = 8;      //每頁顯示數據條數
        var currentPage = 1;   //當前頁數
        var prevPage = 0;
        var totalSize = $(".card.cardMenuItem").length; //獲取總數據

        //alert(totalSize);

        var totalPage = Math.ceil(totalSize / pageSize); //計算總頁數
        $(".card.cardMenuItem:gt(" + (pageSize - 1) + ")").hide(); //設置首頁顯示  pageSize-1 條數據

        if (totalSize == 0) {
            $(".pagination").empty().append('<h3 class="text-danger">目前並無訂單</h3>');
        }
            //增加分頁筆數標示
        else { 
        if (currentPage == totalPage) {
            if ((totalSize % pageSize) == 0)
            {
                $("div#pageList").append('<p>第' + ((pageSize * currentPage) - (pageSize - 1)) + '筆 到 第' + (pageSize * currentPage) + '筆, 共' + totalSize + '筆 </p>')
            }
            else {
                $("div#pageList").append('<p>第' + ((pageSize * currentPage) - (pageSize - 1)) + '筆 到 第' + ((pageSize * (currentPage - 1)) + (totalSize % pageSize)) + '筆, 共' + totalSize + '筆 </p>');
            }
            
        }
        else {
            $("div#pageList").append('<p>第' + ((pageSize * currentPage) - (pageSize - 1)) + '筆 到 第' + (pageSize * currentPage ) + '筆, 共' + totalSize + '筆 </p>');
        }

        //移除原有 .pagination 裡的元素 , append "前一頁" li
        $(".pagination").empty().append('</p><li class="page-item prev"><a class="page-link" href="#">❮</a></li>');
        //依總分頁數 , append 各分頁 li
        for (var index = currentPage; index <= totalPage; index++) {
            $(".pagination").append('<li class="page-item pageItems"><a class="page-link" href="#">' + index + '</a></li>');
        }
        //append "後一頁" li
        $(".pagination").append('<li class="page-item next"><a class="page-link" href="#">❯</a></li>');
        }

        //實現下一頁
        $(".next").click(function () {
            //alert("currentPage:" + currentPage + "  totalPage:" + totalPage);
            if (currentPage == totalPage) { //當前頁數==最後一頁，禁止下一頁
                  return false;
            }

            else {//不是最後一頁，顯示應該顯示的數據.
                $(".current_page").text(++currentPage);  //當前頁數先+1
                var start = pageSize * (currentPage - 1);
                var end = pageSize * currentPage;

                //增加分頁筆數標示
                if (currentPage == totalPage) {
                    if ((totalSize % pageSize) == 0) {
                        $("div#pageList").empty().append('<p>第' + ((pageSize * currentPage) - (pageSize - 1)) + '筆 到 第' + (pageSize * currentPage) + '筆, 共' + totalSize + '筆 </p>')
                    }
                    else {
                        $("div#pageList").empty().append('<p>第' + ((pageSize * currentPage) - (pageSize - 1)) + '筆 到 第' + ((pageSize * (currentPage - 1)) + (totalSize % pageSize)) + '筆, 共' + totalSize + '筆 </p>');
                    }
                }
                else {
                    $("div#pageList").empty().append('<p>第' + ((pageSize * currentPage) - (pageSize - 1)) + '筆 到 第' + (pageSize * currentPage) + '筆, 共' + totalSize + '筆 </p>');
                }
                $.each($('.card.cardMenuItem'), function (index, item) {
                    if (index >= start && index < end) {
                        $(this).show();
                    }
                    else {
                        $(this).hide();
                    }
                });
            }

        });

        //實現上一頁
        $(".prev").click(function () {
            alert("currentPage:" + currentPage + "  totalPage:" + totalPage);
            if (currentPage == 1) {//當前頁數==1，禁止上一頁
                 return false;
            } else {
                $(".current_page").text(--currentPage);  //當前頁數先-1
                var start = pageSize * (currentPage - 1);
                var end = pageSize * currentPage;

                //增加分頁筆數標示
                if (currentPage == totalPage) {
                    if ((totalSize % pageSize) == 0) {
                        $("div#pageList").empty().append('<p>第' + ((pageSize * currentPage) - (pageSize - 1)) + '筆 到 第' + (pageSize * currentPage) + '筆, 共' + totalSize + '筆 </p>')
                    }
                    else {
                        $("div#pageList").empty().append('<p>第' + ((pageSize * currentPage) - (pageSize - 1)) + '筆 到 第' + ((pageSize * (currentPage - 1)) + (totalSize % pageSize)) + '筆, 共' + totalSize + '筆 </p>');
                    }
                }
                else {
                    $("div#pageList").empty().append('<p>第' + ((pageSize * currentPage) - (pageSize - 1)) + '筆 到 第' + (pageSize * currentPage) + '筆, 共' + totalSize + '筆 </p>');
                }

                $.each($('.card.cardMenuItem'), function (index, item) {
                    if (index >= start && index < end) {
                        $(this).show();
                    }
                    else {
                        $(this).hide();
                    }
                });
                
            }
        });

        //選擇特定頁
        $(".pageItems").click(function () {
            //alert(this.innerText);
            prevPage = currentPage;
            currentPage = this.innerText;

            //alert($(".pagination").find("li")[0].innerText);
            //加入page-item  active
            //$(".pagination").find("li")[currentPage].addClass('active');

            var start = pageSize * (currentPage - 1);
            var end = pageSize * currentPage;

            //增加分頁筆數標示
            if (currentPage == totalPage) {
                if ((totalSize % pageSize) == 0) {
                    $("div#pageList").empty().append('<p>第' + ((pageSize * currentPage) - (pageSize - 1)) + '筆 到 第' + (pageSize * currentPage) + '筆, 共' + totalSize + '筆 </p>')
                }
                else {
                    $("div#pageList").empty().append('<p>第' + ((pageSize * currentPage) - (pageSize - 1)) + '筆 到 第' + ((pageSize * (currentPage - 1)) + (totalSize % pageSize)) + '筆, 共' + totalSize + '筆 </p>');
                }
            }
            else {
                $("div#pageList").empty().append('<p>第' + ((pageSize * currentPage) - (pageSize - 1)) + '筆 到 第' + (pageSize * currentPage) + '筆, 共' + totalSize + '筆 </p>');
            }

            $.each($('.card.cardMenuItem'), function (index, item) {
                if (index >= start && index < end) {
                    $(this).show();
                }
                else {
                    $(this).hide();
                }
            });
         


        });

        //$("div.col-xs-1").data("status") == 2

         statusCheck();
    });

    //確認訂單狀況， 所有產品狀態為 2 ==>出餐按鈕可點選
    function statusCheck() {
        //計算單張訂單產品狀態總和 = 產品項目*2
        $(".card.cardMenuItem").each(function () {
            //console.log($(this).find(".col-xs-1"));
            var orderOk = $(this).find("li").length * 2;
            var totalCount = 0;
            $(this).find(".col-xs-1").each(function () {
                //console.log($(this).data("status"));
                totalCount += parseInt($(this).data("status"));
            });

            //console.log("orderok：" + orderOk + "  totalCount：" + totalCount);
            if (totalCount == orderOk) {
                $(this).find(".btn.btn-sm").removeAttr('disabled');
            }
            if (totalCount < orderOk) {
                $(this).find(".btn.btn-sm").attr('disabled', true);
            }
        });
        //如果產品狀態==2, 加上check icon
        $("div.col-xs-1").each(function () {
            //console.log($(this).data("status"));
            if ($(this).data("status") == 2) {
                $(this).append('<i class="fa fa-fw fa-check-circle"></i>')
                    .css("color", "green");
                $(this).parent()
                    .find("p").css("color", "green");
            }
            else { $(this).append(''); }
        })
    }

    

</script>
<script>
    $(function () {
        alert("1 OK")
        var chat = $.connection.storeHub;
        alert("2 OK")
        chat.client.addNewMessageToPage = function (test, storeId) {
            //alert(test);
            //alert(storeId);
            //alert(test);
            //$("#storeTable tbody").append('<tr>' + newOrderData.orderTime + '</tr>');
            window.location.reload();
        };

        $.connection.hub.start().done(function () {
            alert('start');
            var x = "test1";
            var storeId = @Session["storeId"];

            chat.server.send("123", storeId);
            alert('end');
        });
    });
</script>